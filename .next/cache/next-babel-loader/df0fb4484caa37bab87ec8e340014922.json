{"ast":null,"code":"var _jsxFileName = \"C:\\\\playground\\\\wishlist-next\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport react, { useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Container, Row, Col } from 'react-bootstrap';\nconst columns = ['Thumbnail', 'Title', 'Description', 'Players', 'Playtime', 'MinAge', 'Select'];\nexport default function index(props) {\n  const {\n    0: selectedGames,\n    1: setSelectedGames\n  } = useState([]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\",\n    integrity: \"sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4\",\n    crossorigin: \"anonymous\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), __jsx(\"table\", {\n    className: \"table table-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, columns.map(x => __jsx(\"th\", {\n    scope: \"col\",\n    key: x,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, x)))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.games.map(x => {\n    return __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: x.thumbnail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, x.gameTitle), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, x.description), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, x.minplayers, \"-\", x.maxplayers), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, x.minplaytime, \"-\", x.maxplaytime), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, x.minage), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: (e, d) => {\n        setSelectedGames(selectedGames.concat(x.gameTitle));\n        console.log(selectedGames);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }))));\n}\n\nindex.getInitialProps = async function () {\n  const response = await fetch('https://bgg-api.azurewebsites.net/api/GetWishlistDetailedLocalTable?code=4GcBaUuR/mQWefy9Lu9DBN2kLZ2Al2Ju4sasuwNho7aqWe3zchW5KQ==');\n  const data = await response.json();\n  return {\n    games: data.map(entry => entry)\n  };\n};","map":{"version":3,"sources":["C:/playground/wishlist-next/pages/index.js"],"names":["react","useState","fetch","Container","Row","Col","columns","index","props","selectedGames","setSelectedGames","map","x","games","thumbnail","gameTitle","description","minplayers","maxplayers","minplaytime","maxplaytime","minage","e","d","concat","console","log","getInitialProps","response","data","json","entry"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AAEA,MAAMC,OAAO,GAAG,CAAC,WAAD,EAAc,OAAd,EAAuB,aAAvB,EAAsC,SAAtC,EAAiD,UAAjD,EAA6D,QAA7D,EAAuE,QAAvE,CAAhB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpC,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,GAAG,EAAC,YADL;AAEC,IAAA,IAAI,EAAC,0EAFN;AAGC,IAAA,SAAS,EAAC,yEAHX;AAIC,IAAA,WAAW,EAAC,WAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAOC;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEK,OAAO,CAACK,GAAR,CAAYC,CAAC,IACb;AAAI,IAAA,KAAK,EAAC,KAAV;AAAgB,IAAA,GAAG,EAAEA,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,CADF,CADA,CADF,CADD,CADD,EAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,KAAK,CAACK,KAAN,CAAYF,GAAZ,CAAgBC,CAAC,IAAI;AACrB,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,CAAC,CAACG,SAAP,CAJD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,CAAC,CAACI,WAAP,CALD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEJ,CAAC,CAACK,UADJ,OACiBL,CAAC,CAACM,UADnB,CAND,EASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEN,CAAC,CAACO,WADJ,OACkBP,CAAC,CAACQ,WADpB,CATD,EAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKR,CAAC,CAACS,MAAP,CAZD,EAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACC,MAAA,IAAI,EAAC,UADN;AAEC,MAAA,QAAQ,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnBb,QAAAA,gBAAgB,CAACD,aAAa,CAACe,MAAd,CAAqBZ,CAAC,CAACG,SAAvB,CAAD,CAAhB;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYjB,aAAZ;AACA,OALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAbD,CADD;AAyBA,GA1BA,CADF,CAVD,CAPD,CADD;AAkDA;;AAEDF,KAAK,CAACoB,eAAN,GAAwB,kBAAiB;AACxC,QAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAC3B,mIAD2B,CAA5B;AAGA,QAAM2B,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAO;AAAEjB,IAAAA,KAAK,EAAEgB,IAAI,CAAClB,GAAL,CAASoB,KAAK,IAAIA,KAAlB;AAAT,GAAP;AACA,CAND","sourcesContent":["import react, { useState } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst columns = ['Thumbnail', 'Title', 'Description', 'Players', 'Playtime', 'MinAge', 'Select'];\r\n\r\nexport default function index(props) {\r\n\tconst [selectedGames, setSelectedGames] = useState([]);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<link\r\n\t\t\t\trel=\"stylesheet\"\r\n\t\t\t\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\"\r\n\t\t\t\tintegrity=\"sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4\"\r\n\t\t\t\tcrossorigin=\"anonymous\"\r\n\t\t\t/>\r\n\t\t\t<table className=\"table table-dark\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t{columns.map(x => (\r\n\t\t\t\t\t\t\t<th scope=\"col\" key={x}>\r\n\t\t\t\t\t\t\t\t{x}\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{props.games.map(x => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<img src={x.thumbnail} />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>{x.gameTitle}</td>\r\n\t\t\t\t\t\t\t\t<td>{x.description}</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t{x.minplayers}-{x.maxplayers}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t{x.minplaytime}-{x.maxplaytime}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>{x.minage}</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e, d) => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectedGames(selectedGames.concat(x.gameTitle));\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(selectedGames);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nindex.getInitialProps = async function() {\r\n\tconst response = await fetch(\r\n\t\t'https://bgg-api.azurewebsites.net/api/GetWishlistDetailedLocalTable?code=4GcBaUuR/mQWefy9Lu9DBN2kLZ2Al2Ju4sasuwNho7aqWe3zchW5KQ=='\r\n\t);\r\n\tconst data = await response.json();\r\n\treturn { games: data.map(entry => entry) };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}